# make
# make macos

TARGET   := rtm-gwas-assoc

CC       := gcc
CXX      := g++
CFLAGS   := -O2 -std=c11 -Wall -DNDEBUG
CXXFLAGS := -O2 -std=c++11 -fopenmp -Wall -DNDEBUG
LDFLAGS  := -s -static -fopenmp

MKLROOT  := /opt/intel/mkl

OBJ      := $(patsubst %.cpp,%.o,$(wildcard src/*.cpp))
OBJ      += $(patsubst %.c,%.o,$(wildcard src/*.c))

MKLLIB := $(MKLROOT)/lib/intel64
ifeq ($(MAKECMDGOALS),macos)
MKLLIB := $(MKLROOT)/lib
endif

LIB1    := $(MKLLIB)/libmkl_intel_lp64.a
LIB2    := $(MKLLIB)/libmkl_sequential.a
LIB3    := $(MKLLIB)/libmkl_core.a
LDLIBS  := -Wl,--start-group $(LIB1) $(LIB2) $(LIB3) -Wl,--end-group

ifeq ($(MAKECMDGOALS),macos)
CC      := clang
CXX     := clang++
LDFLAGS := $(filter-out -s -static,$(LDFLAGS))
LDLIBS  := $(LIB1) $(LIB2) $(LIB3)
endif

LDLIBS += -lpthread -lm -ldl


EXE := $(TARGET)

.PHONY: all macos clean

all: $(EXE)

$(EXE): $(OBJ)
	$(CXX) $(LDFLAGS) -o $@ $? $(LDLIBS)

macos: all

clean:
	$(RM) $(OBJ) $(TARGET)
